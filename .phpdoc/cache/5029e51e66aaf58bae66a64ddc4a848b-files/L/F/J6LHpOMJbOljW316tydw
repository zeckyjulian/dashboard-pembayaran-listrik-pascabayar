1755988667
5029e51e66aaf58bae66a64ddc4a848b-phpdoc%3A14542f032370890383cd18e6f6a2e251-89f15b166b80ec35c10582222173c8ab
s:7716:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjE5OiJpbnB1dC1wZWxhbmdnYW4ucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW5jbHVkZXMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZnVuY3Rpb25zIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNvbnN0YW50cyI7YTowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjbGFzc2VzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGludGVyZmFjZXMiO2E6MDp7fXM6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAdHJhaXRzIjthOjA6e31zOjQwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGVudW1zIjthOjA6e31zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6Ijg5ZjE1YjE2NmI4MGVjMzVjMTA1ODIyMjIxNzNjOGFiIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHBhdGgiO3M6NTk6ImFwcC9WaWV3cy9CYWNrZW5kL0FkbWluL01hc3RlclBlbGFuZ2dhbi9pbnB1dC1wZWxhbmdnYW4ucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0ODQxOiI8ZGl2IGNsYXNzPSJwYWdlLWlubmVyIj4NCiAgICA8ZGl2IGNsYXNzPSJwYWdlLWhlYWRlciI+DQogICAgICAgIDxoMyBjbGFzcz0iZnctYm9sZCBtYi0zIj5Gb3JtczwvaDM+DQogICAgICAgIDx1bCBjbGFzcz0iYnJlYWRjcnVtYnMgbWItMyI+DQogICAgICAgIDxsaSBjbGFzcz0ibmF2LWhvbWUiPg0KICAgICAgICAgICAgPGEgaHJlZj0iIyI+DQogICAgICAgICAgICA8aSBjbGFzcz0iaWNvbi1ob21lIj48L2k+DQogICAgICAgICAgICA8L2E+DQogICAgICAgIDwvbGk+DQogICAgICAgIDxsaSBjbGFzcz0ic2VwYXJhdG9yIj4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLWFycm93LXJpZ2h0Ij48L2k+DQogICAgICAgIDwvbGk+DQogICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPg0KICAgICAgICAgICAgPGEgaHJlZj0iIyI+Rm9ybXM8L2E+DQogICAgICAgIDwvbGk+DQogICAgICAgIDxsaSBjbGFzcz0ic2VwYXJhdG9yIj4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJpY29uLWFycm93LXJpZ2h0Ij48L2k+DQogICAgICAgIDwvbGk+DQogICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPg0KICAgICAgICAgICAgPGEgaHJlZj0iIyI+QmFzaWMgRm9ybTwvYT4NCiAgICAgICAgPC9saT4NCiAgICAgICAgPC91bD4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMTIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkIj4NCiAgICAgICAgICAgIDxmb3JtIGFjdGlvbj0iPD9waHAgZWNobyBiYXNlX3VybCgnYWRtaW4vc2ltcGFuLXBlbGFuZ2dhbicpID8+IiBtZXRob2Q9InBvc3QiIGVuY3R5cGU9Im11bHRpcGFydC9mb3JtLWRhdGEiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXIiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC10aXRsZSI+Rm9ybSBFbGVtZW50czwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtbGctNiI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InVzZXJuYW1lIj5Vc2VybmFtZTwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLXRleHQiIGlkPSJiYXNpYy1hZGRvbjEiDQogICAgICAgICAgICAgICAgICAgICAgICA+QDwvc3Bhbg0KICAgICAgICAgICAgICAgICAgICA+DQogICAgICAgICAgICAgICAgICAgIDxpbnB1dA0KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCINCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiDQogICAgICAgICAgICAgICAgICAgICAgICBpZD0idXNlcm5hbWUiDQogICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJ1c2VybmFtZSINCiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJVc2VybmFtZSINCiAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9IlVzZXJuYW1lIg0KICAgICAgICAgICAgICAgICAgICAgICAgYXJpYS1kZXNjcmliZWRieT0iYmFzaWMtYWRkb24xIg0KICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQNCiAgICAgICAgICAgICAgICAgICAgLz4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InBhc3N3b3JkIj5QYXNzd29yZDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgIDxpbnB1dA0KICAgICAgICAgICAgICAgICAgICB0eXBlPSJwYXNzd29yZCINCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCINCiAgICAgICAgICAgICAgICAgICAgaWQ9InBhc3N3b3JkIg0KICAgICAgICAgICAgICAgICAgICBuYW1lPSJwYXNzd29yZCINCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlBhc3N3b3JkIg0KICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAvPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJub2t3aCI+Tm9tb3Iga1doPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0DQogICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiDQogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgZm9ybS1jb250cm9sIg0KICAgICAgICAgICAgICAgICAgICBvbktleVByZXNzPSJyZXR1cm4gZ29vZGNoYXJzKGV2ZW50LCcwMTIzNDU2Nzg5KycsdGhpcykiDQogICAgICAgICAgICAgICAgICAgIGlkPSJub2t3aCINCiAgICAgICAgICAgICAgICAgICAgbmFtZT0ibm9rd2giDQogICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJDb250b2g6IDEyMzQ1Njc4OTAwIg0KICAgICAgICAgICAgICAgICAgICByZXF1aXJlZA0KICAgICAgICAgICAgICAgICAgICAvPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJleGFtcGxlRm9ybUNvbnRyb2xTZWxlY3QxIg0KICAgICAgICAgICAgICAgICAgICA+UGlsaWggRGF5YTwvbGFiZWwNCiAgICAgICAgICAgICAgICAgICAgPg0KICAgICAgICAgICAgICAgICAgICA8c2VsZWN0DQogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLXNlbGVjdCINCiAgICAgICAgICAgICAgICAgICAgaWQ9ImV4YW1wbGVGb3JtQ29udHJvbFNlbGVjdDEiDQogICAgICAgICAgICAgICAgICAgIG5hbWU9ImRheWEiDQogICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkDQogICAgICAgICAgICAgICAgICAgID4NCiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbj4gPT0+IFBpbGloIERheWEgPD09IDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICA8P3BocA0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJGRhdGFUYXJpZiBhcyAkZGF0YSl7DQogICAgICAgICAgICAgICAgICAgID8+DQogICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI8Pz0gJGRhdGFbJ2lkX3RhcmlmJ107ID8+Ij48Pz0gJGRhdGFbJ2RheWEnXTsgPz48L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgPD9waHAgfSA/Pg0KICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNiBjb2wtbGctNiI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImxhcmdlSW5wdXQiPk5hbWEgUGVsYW5nZ2FuPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0DQogICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiDQogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgZm9ybS1jb250cm9sIg0KICAgICAgICAgICAgICAgICAgICBvbktleVByZXNzPSJyZXR1cm4gZ29vZGNoYXJzKGV2ZW50LCdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaICcsdGhpcykiDQogICAgICAgICAgICAgICAgICAgIGlkPSJsYXJnZUlucHV0Ig0KICAgICAgICAgICAgICAgICAgICBuYW1lPSJuYW1hcGVsYW5nZ2FuIg0KICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iQ29udG9oOiBCdWRpIFNhbnRvc28iDQogICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkDQogICAgICAgICAgICAgICAgICAgIC8+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImFsYW1hdCI+QWxhbWF0PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG9uS2V5UHJlc3M9InJldHVybiBnb29kY2hhcnMoZXZlbnQsJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVogMTIzNDU2Nzg5MC8sLicsdGhpcykiIGlkPSJhbGFtYXQiIG5hbWU9ImFsYW1hdCIgcm93cz0iNiIgcmVxdWlyZWQ+DQogICAgICAgICAgICAgICAgICAgIDwvaW5wdXQ+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hY3Rpb24iPg0KICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiPlN1Ym1pdDwvYnV0dG9uPg0KICAgICAgICAgICAgPGEgaHJlZj0iPD9waHAgZWNobyBiYXNlX3VybCgnYWRtaW4vZGF0YS1wZWxhbmdnYW4nKSA/PiI+PGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWRhbmdlciI+Q2FuY2VsPC9idXR0b24+PC9hPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2Zvcm0+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCjwvZGl2PiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG1ldGFkYXRhIjthOjA6e319";